August 2013

Anne Thessen was funded as an independent contractor to gather data from the University
of Tartu collections in Europeana using their API. The data were to be delivered in 
DwC-A format.

1. Get a key from Europeana. Every API user needs one.

2. Find out the ID number for the collection of interest. University of Tartu is 11617.

3. Make a list of numbers that increment in the maximum number of 
records that the Europeana API will allow to be called at one time (100). I use 
query_rows_20000.txt

3. Use europeana_api_1_tartu.py to get a list of identification numbers for each record 
contained in the collection of interest. The output is europeana_ids.txt. You won't have 
to do this again, unless more records are added to the collection.

4. Use europeana_api_2_tartu.py to access the metadata for each record. The API only allows
10,000 queries per day for each user. I broke up the list of record ids 
(europeana_ids.txt) into smaller jobs in the file europeana_ids_job.txt. This returns a 
tab separated file europ_metadata.txt. After each run, I copied and pasted the results into 
europ_metadata_final.txt.

5. Metadata_final.txt was opened in excel. The names were deduped to get the core list 
for the DwC-A file. This is europeana_taxon_list.txt. Be sure to open the taxon list in a 
text editor after deduping and change the end of line characters to Unix LF. You should 
also remove all "'" (single apostrophe) before making the dictionary or it will screw with 
your formatting. You don't have to do this unless you are recreating the core DwC-A file or
the dictionary.

6. Use europeana_api_3_tartu.py to generate the core DwC-A file from the taxon list - essentially
assigning an ID to each taxon name.

7. Use taxon_list_to_dict.py to generate a dictionary out of the europ_taxa.txt file. This
will help europeana_api_4_tartu.py look up the taxon ID numbers when generating the media 
extension file. Both the dictionary and DwC-A core file will have to be manually edited 
to remove the "sp." and "aff." and "?" etc.

7. Use europeana_api_4_tartu.py to generate the media extension file (europ_media.txt). Images 
with no taxon name attached were removed from the data set.

8. At this point, all the bits are finished. Have a look over the files and fix any 
errors. Then zip them together and run them through the validator. Fix any issues the 
validator finds.